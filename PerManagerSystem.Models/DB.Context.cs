//------------------------------------------------------------------------------
// <auto-generated>
//     此代码已从模板生成。
//
//     手动更改此文件可能导致应用程序出现意外的行为。
//     如果重新生成代码，将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

namespace PerManagerSystem.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DBContainer : DbContext
    {
        public DBContainer()
            : base("name=DBContainer")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<SysSample> SysSample { get; set; }
        public virtual DbSet<Department> Department { get; set; }
        public virtual DbSet<SysException> SysException { get; set; }
        public virtual DbSet<SysLoginLog> SysLoginLog { get; set; }
        public virtual DbSet<SysModule> SysModule { get; set; }
        public virtual DbSet<SysModuleOperations> SysModuleOperations { get; set; }
        public virtual DbSet<SysOperations> SysOperations { get; set; }
        public virtual DbSet<SysRole> SysRole { get; set; }
        public virtual DbSet<SysRoleModuleOperations> SysRoleModuleOperations { get; set; }
        public virtual DbSet<SysUser> SysUser { get; set; }
        public virtual DbSet<SysUserOperateLog> SysUserOperateLog { get; set; }
        public virtual DbSet<SysUserRole> SysUserRole { get; set; }
        public virtual DbSet<Icon> Icon { get; set; }
    
        public virtual ObjectResult<P_Sys_GetModuleByConn_Result> P_Sys_GetModuleByConn(Nullable<int> userId, Nullable<int> moduleId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(int));
    
            var moduleIdParameter = moduleId.HasValue ?
                new ObjectParameter("moduleId", moduleId) :
                new ObjectParameter("moduleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<P_Sys_GetModuleByConn_Result>("P_Sys_GetModuleByConn", userIdParameter, moduleIdParameter);
        }
    
        public virtual ObjectResult<string> P_SyS_GetPermission(Nullable<int> userId, string controller)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(int));
    
            var controllerParameter = controller != null ?
                new ObjectParameter("controller", controller) :
                new ObjectParameter("controller", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("P_SyS_GetPermission", userIdParameter, controllerParameter);
        }
    
        public virtual ObjectResult<P_Sys_GetOperationByModuleId_Result> P_Sys_GetOperationByModuleId(Nullable<int> moduleId)
        {
            var moduleIdParameter = moduleId.HasValue ?
                new ObjectParameter("moduleId", moduleId) :
                new ObjectParameter("moduleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<P_Sys_GetOperationByModuleId_Result>("P_Sys_GetOperationByModuleId", moduleIdParameter);
        }
    
        public virtual int P_Sys_DeleteModuleOperation(Nullable<int> moduleId)
        {
            var moduleIdParameter = moduleId.HasValue ?
                new ObjectParameter("moduleId", moduleId) :
                new ObjectParameter("moduleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("P_Sys_DeleteModuleOperation", moduleIdParameter);
        }
    
        public virtual int P_Sys_SysModuleAllotOperation(Nullable<int> operationId, Nullable<int> moduleId)
        {
            var operationIdParameter = operationId.HasValue ?
                new ObjectParameter("operationId", operationId) :
                new ObjectParameter("operationId", typeof(int));
    
            var moduleIdParameter = moduleId.HasValue ?
                new ObjectParameter("moduleId", moduleId) :
                new ObjectParameter("moduleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("P_Sys_SysModuleAllotOperation", operationIdParameter, moduleIdParameter);
        }
    
        public virtual ObjectResult<P_Sys_GetPermByRoleAndModule_Result> P_Sys_GetPermByRoleAndModule(Nullable<int> roleId, Nullable<int> moduleId)
        {
            var roleIdParameter = roleId.HasValue ?
                new ObjectParameter("roleId", roleId) :
                new ObjectParameter("roleId", typeof(int));
    
            var moduleIdParameter = moduleId.HasValue ?
                new ObjectParameter("moduleId", moduleId) :
                new ObjectParameter("moduleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<P_Sys_GetPermByRoleAndModule_Result>("P_Sys_GetPermByRoleAndModule", roleIdParameter, moduleIdParameter);
        }
    
        public virtual int P_Sys_DeleteRoleModuleOpera(Nullable<int> roleId, Nullable<int> moduleId)
        {
            var roleIdParameter = roleId.HasValue ?
                new ObjectParameter("roleId", roleId) :
                new ObjectParameter("roleId", typeof(int));
    
            var moduleIdParameter = moduleId.HasValue ?
                new ObjectParameter("moduleId", moduleId) :
                new ObjectParameter("moduleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("P_Sys_DeleteRoleModuleOpera", roleIdParameter, moduleIdParameter);
        }
    
        public virtual int P_Sys_RolePermSet(Nullable<int> roleId, Nullable<int> moduleId, Nullable<int> operatId)
        {
            var roleIdParameter = roleId.HasValue ?
                new ObjectParameter("roleId", roleId) :
                new ObjectParameter("roleId", typeof(int));
    
            var moduleIdParameter = moduleId.HasValue ?
                new ObjectParameter("moduleId", moduleId) :
                new ObjectParameter("moduleId", typeof(int));
    
            var operatIdParameter = operatId.HasValue ?
                new ObjectParameter("operatId", operatId) :
                new ObjectParameter("operatId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("P_Sys_RolePermSet", roleIdParameter, moduleIdParameter, operatIdParameter);
        }
    
        public virtual int P_Sys_DeleteUserRole(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("P_Sys_DeleteUserRole", userIdParameter);
        }
    
        public virtual int P_Sys_UserAllotRole(Nullable<int> userId, Nullable<int> roleId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(int));
    
            var roleIdParameter = roleId.HasValue ?
                new ObjectParameter("roleId", roleId) :
                new ObjectParameter("roleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("P_Sys_UserAllotRole", userIdParameter, roleIdParameter);
        }
    
        public virtual ObjectResult<P_Sys_GetRoleListByUserId_Result> P_Sys_GetRoleListByUserId(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<P_Sys_GetRoleListByUserId_Result>("P_Sys_GetRoleListByUserId", userIdParameter);
        }
    
        public virtual ObjectResult<P_Sys_GetModuleByUserId_Result> P_Sys_GetModuleByUserId(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<P_Sys_GetModuleByUserId_Result>("P_Sys_GetModuleByUserId", userIdParameter);
        }
    }
}
